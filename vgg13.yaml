# This yaml file defines the layer-wise pruning ratio.
# The following code is an example, and you need to finish the whole file.
# You need to list all the layer names you that want to prune and provide corssesponding prune ratio.
# Due to the existence of BN layer, ReLU layer, and pooling layer, the numbers of adjacent conv layers are often not adjacent.
# For example, 
# the name of 1st conv layer in vgg13 is features.0.weight
# the name of 2nd conv layer in vgg13 is features.3.weight
# You need to find the layer name from the model.

# An empirical conclusion is that we prefer to not prune the first Conv layer and last FC layer,
# due to they are usually more sensitive to the pruning and have fewer number of weights.







# prune_ratios:
#   # features.0.weight: 0.0
#   features.1.weight: 0.8
#   features.1.bias: 0.8
#   features.3.weight: 0.8
#   features.4.weight: 0.8
#   features.4.bias: 0.8
#   features.7.weight: 0.8
#   features.8.weight: 0.8
#   features.8.bias: 0.8
#   features.10.weight: 0.8
#   features.11.weight: 0.8
#   features.11.bias: 0.8
#   features.14.weight: 0.8
#   features.15.weight: 0.8
#   features.15.bias: 0.8
#   features.17.weight: 0.8
#   features.18.weight: 0.8
#   features.18.bias: 0.8
#   features.21.weight: 0.8
#   features.22.weight: 0.8
#   features.22.bias: 0.8
#   features.24.weight: 0.8
#   features.25.weight: 0.8
#   features.25.bias: 0.8
#   features.28.weight: 0.8
#   features.29.weight: 0.8
#   features.29.bias: 0.8
#   features.31.weight: 0.8
#   features.32.weight: 0.8
  # features.32.bias: 0.8
  # classifier.weight: 0.0
  # classifier.bias: 0.0


 


prune_ratios_unstructured:
  # features.0.weight: 0.8 # First Conv Layer
  features.3.weight: 0.8
  features.7.weight: 0.8
  features.10.weight: 0.85
  features.14.weight: 0.8
  features.17.weight: 0.8
  features.21.weight: 0.85
  features.24.weight: 0.8
  features.28.weight: 0.8
  features.31.weight: 0.8



prune_ratios_filter:
  # Convolutional Layers
  # features.0.weight: 0.5  # First Conv Layer
  features.3.weight: 0.4
  features.7.weight: 0.4
  features.10.weight: 0.45
  features.14.weight: 0.4
  features.17.weight: 0.4
  features.21.weight: 0.4
  features.24.weight: 0.45
  features.28.weight: 0.4
  features.31.weight: 0.4
#   # Fully Connected (Linear) Layers
#   # classifier.weight: 0.5  # Fully Connected Layer (Linear layer before output)
#   # classifier.bias: 0.5    # Fully Connected Layer Bias

#   # BatchNorm Layers
#   features.1.weight: 0.5  # BatchNorm after first convolution
#   features.1.bias: 0.5    # BatchNorm Bias after first convolution
#   features.4.bias: 0.5    # BatchNorm Bias after second convolution
#   features.8.bias: 0.5    # BatchNorm Bias after third convolution
#   features.11.bias: 0.5   # BatchNorm Bias after fifth convolution
#   features.14.bias: 0.5   # BatchNorm Bias after sixth convolution
#   features.15.bias: 0.5   # BatchNorm Bias after seventh convolution
#   features.18.bias: 0.5   # BatchNorm Bias after ninth convolution
#   features.22.bias: 0.5   # BatchNorm Bias after eleventh convolution
#   features.25.bias: 0.5   # BatchNorm Bias after thirteenth convolution
